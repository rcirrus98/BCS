-- Get location for completed SO where SI links to SO
SELECT SO.soID, SO.soDate, SI.LocationID
INTO #CompletedSODetail_DirectLocation
FROM SO
INNER JOIN SS ON SO.soID = SS.soID
INNER JOIN SI ON SI.ssID = SS.ssID AND SI.soID = SO.soID

/* METHOD 1 */
-- Get location for completed SO where SI does not link to SO
-- Try to derive location for SO based on locations existing prior to the SO
SELECT si3.soID, si3.soDate, SI.LocationID
INTO #CompletedSODetail_DerivedLocation
FROM SI
INNER JOIN (
			SELECT si1.soID, si1.soDate, si1.siID, MAX(si1.siDate) AS siDate
			FROM SI si2
			INNER JOIN (
						SELECT SO.soID, SO.soDate, MAX(SI.siID) AS siID, SI.siDate
						FROM SO
						INNER JOIN SS ON SS.soID = SO.soID
						INNER JOIN SI ON SI.ssID = SS.ssID
						WHERE ISNULL(SI.soID,0) <> SO.soID AND SI.siDate <= SO.soDate
						GROUP BY SO.soID, SO.soDate, SI.siDate
					) si1 ON si1.siID = si2.siID AND si2.siDate <= si1.soDate
			GROUP BY si1.soID, si1.soDate, si1.siID
		) si3 ON si3.siID = SI.siID AND SI.siDate <= si3.soDate

SELECT *
FROM #CompletedSODetail_DirectLocation
UNION
SELECT t1.*
FROM #CompletedSODetail_DerivedLocation t1
LEFT OUTER JOIN #CompletedSODetail_DirectLocation t2 ON
WHERE t2.soID IS NULL

/* METHOD 2 */
SELECT SO.soID, SO.soDate, si.LocationID
FROM SO
CROSS APPLY (
				SELECT TOP 1 SI.LocationID
				FROM SS
				INNER JOIN SI ON SI.ssID = SS.ssID
				WHERE SS.soID = SO.soID
					AND ISNULL(SI.soID,0) <> SO.soID
					AND SI.siDate <= SO.soDate
				ORDER BY SI.siDate DESC, SI.siID DESC
) si

/* METHOD 3 */
SELECT t.soID, t.soDate, t.LocationID
FROM (
	SELECT SO.soID, SO.soDate, SI.LocationID
		,ROW_NUMBER() OVER(PARTITION BY SI.ssID, SI.siID ORDER BY SI.siDate DESC, SI.siID DESC) AS Seq
	FROM SO
	INNER JOIN SS ON SS.soID = SO.soID
	INNER JOIN SI ON SI.ssID = SS.ssID AND ISNULL(SI.soID,0) <> SO.soID
	WHERE SI.siDate <= SO.soDate
) t
WHERE t.Seq = 1
